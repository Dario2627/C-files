#define SDL_MAIN_HANDLED 1
#include <SDL.h>


int main(int argc, char const *argv[])
{
    SDL_Renderer *renderer = NULL; 
    SDL_Event event;

    SDL_Init(SDL_INIT_EVERYTHING);
    //create a game Window and a renderer 
    SDL_Window *window = SDL_CreateWindow("Tetris", SDL_WINDOWPOS_UNDEFINED, SDL_WINDOWPOS_UNDEFINED, 1024, 768, SDL_WINDOW_OPENGL);
    renderer = SDL_CreateRenderer(window, -1, SDL_RENDERER_ACCELERATED|SDL_RENDERER_PRESENTVSYNC);
   

    //create a rect 
    SDL_Rect rect = {50,50,20,20};

    //set this variable to 1 for loop the game
    int running = 1;

    while(running)
    {

        while(SDL_PollEvent(&event)) // is the favored way of receiving system events since it can be done from the main loop and does not suspend the main loop while waiting on an event to be posted. 
        {
            if(event.type == SDL_QUIT)
            {
                running = 0;
            }
            //check the event type
            if(event.type == SDL_KEYDOWN)
            {
                switch(event.key.keysym.sym)
                {
                    case SDLK_w:
                    rect.y -= 5;
                    break;
                    case SDLK_s:
                    rect.y += 5;
                    break;
                    case SDLK_a:
                    rect.x -= 5;
                    break;
                    case SDLK_d:
                    rect.x += 5;
                    break;
                }
            }
        }

        //DRAW HERE

        //Clear screen with black
        SDL_SetRenderDrawColor(renderer, 0, 0, 0, 255);
        SDL_RenderClear(renderer);

        //PAINT WITH YELLOW
        SDL_SetRenderDrawColor(renderer, 255, 255, 0, 255);
        SDL_RenderFillRect(renderer,&rect);



        //Show what we draw
        SDL_RenderPresent(renderer);
    }

    return 0;
   
   
}
